<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Wang Junjie</title>
    <link>https://ijunjie.github.io/post/</link>
    <description>Recent content in Posts on Wang Junjie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 23 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ijunjie.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>openstack4j 中的 IoC 设计</title>
      <link>https://ijunjie.github.io/post/dp/openstack4j-%E4%B8%AD%E7%9A%84-ioc-%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijunjie.github.io/post/dp/openstack4j-%E4%B8%AD%E7%9A%84-ioc-%E8%AE%BE%E8%AE%A1/</guid>
      <description>openstack4j 简介 openstack4j 是一个开源的 Java OpenStack SDK. 更多信息请了解其 官网. 源码地址：https://github.com/ContainX/openstack4j.g</description>
    </item>
    
    <item>
      <title>Ramda：一个精致的Javascript函数式编程库</title>
      <link>https://ijunjie.github.io/post/fp/ramda/</link>
      <pubDate>Sun, 22 Apr 2018 14:25:02 +0800</pubDate>
      
      <guid>https://ijunjie.github.io/post/fp/ramda/</guid>
      <description>Ramda是什么 Ramda的官方文档中文版：Ramda 简介 阮一峰也曾以他一贯的通俗易懂的风格写过一篇介绍： Ramda 函数库参考教程 柯里化 关于什么是柯</description>
    </item>
    
    <item>
      <title>浅谈函数式编程—下篇：核心概念</title>
      <link>https://ijunjie.github.io/post/fp/fp-basic/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijunjie.github.io/post/fp/fp-basic/</guid>
      <description>本篇是《浅谈函数式编程》的下篇，主要讲解一些重要的函数式编程概念。上篇主要介绍编程范式： 浅谈函数式编程-上篇：编程范式 导读：阅读本篇前，请思</description>
    </item>
    
    <item>
      <title>浅谈函数式编程—上篇：编程范式</title>
      <link>https://ijunjie.github.io/post/fp/fp-paradigm/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijunjie.github.io/post/fp/fp-paradigm/</guid>
      <description>当我们谈论函数式编程时，我们在谈论什么？ map, flatmap, closure,filter, reduce, functor, monoid, monad, currying, lambda, cps, predicate, y-combinator&amp;hellip; (请自动脑补标签云图&amp;hellip;) 几年前我在在部门内部做了一次函数式编程</description>
    </item>
    
  </channel>
</rss>